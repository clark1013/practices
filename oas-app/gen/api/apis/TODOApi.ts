/* tslint:disable */
/* eslint-disable */
/**
 * WJZ new
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DemoResponse,
  FailedResponse,
  GetV1Data1Response,
} from '../models';
import {
    DemoResponseFromJSON,
    DemoResponseToJSON,
    FailedResponseFromJSON,
    FailedResponseToJSON,
    GetV1Data1ResponseFromJSON,
    GetV1Data1ResponseToJSON,
} from '../models';

/**
 * 
 */
export class TODOApi extends runtime.BaseAPI {

    /**
     * jkdjkfd jkfdjfkd ****
     * bababa
     */
    async getV1DataRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DemoResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/us-west-2`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DemoResponseFromJSON(jsonValue));
    }

    /**
     * jkdjkfd jkfdjfkd ****
     * bababa
     */
    async getV1Data(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DemoResponse> {
        const response = await this.getV1DataRaw(initOverrides);
        return await response.value();
    }

    /**
     * jkdjkfd jkfdjfkd ****
     * bababa
     */
    async getV1Data1Raw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetV1Data1Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/ap-northeast-1`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetV1Data1ResponseFromJSON(jsonValue));
    }

    /**
     * jkdjkfd jkfdjfkd ****
     * bababa
     */
    async getV1Data1(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetV1Data1Response> {
        const response = await this.getV1Data1Raw(initOverrides);
        return await response.value();
    }

}
